@using Microsoft.AspNetCore.Components.Authorization
@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
<div class="page">
    <div class="sidebar">
        @* <NavMenu /> *@
        <CustomNavMenu/>
    </div>

    <main>
        <AuthorizeView>
            <Authorized>

                <div class="top-row px-4">
                    @if (AuthState!=null && AuthState.User.Identity.IsAuthenticated)
                    {
                        <span class="text-primary">مرحبا, @($"{GlobalData.User.FirstName} {GlobalData.User.LastName}")!</span>
                    }
                </div>

                <article class="content px-4">
                    @Body
                </article>
            </Authorized>
            <NotAuthorized>
                <div class="container d-flex justify-content-center align-items-center min-vh-100">
                    <div class="card">

                    <div class="alert alert-warning">
                        الرجاء تسجيل الدخول للاستمرار
                    </div>


                    <div class="d-flex justify-content-evenly mt-4">
                        <a href="/" class="btn btn-success px-4">
                            <i class="bi bi-key me-1"></i> الذهاب لصفحة تسجيل الدخول
                        </a>
                        
                    </div>
                </div>
                </div>
            </NotAuthorized>
        </AuthorizeView>
        
    </main>
</div>

<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>
@code{
    private AuthenticationState AuthState;
    protected override async Task OnInitializedAsync()
    {
        var test = "";
        AuthState = await ((CustomAuthStateProvider)AuthenticationStateProvider).GetAuthenticationStateAsync();


    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var test = "";
        if (firstRender)
        {
            
            // base.OnInitialized();
            if (AuthState.User != null && !AuthState!.User.Identity!.IsAuthenticated)
            {
                // Redirect to login page if user is not authenticated
                NavigationManager.NavigateTo("/", true);
                return;
            }
        }
    }
}