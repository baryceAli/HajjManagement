@page "/User/Form"
@page "/User/Form/{Id:int?}"

@using CoreBusiness
@using CoreBusiness.Dtos
@using HajjManagement.Shared.Services
@using HajjManagement.Shared.Services.Custom
@inject IGenericAPIService<User> UserService
@inject IGenericAPIService<Country> CountryService
@inject IGenericAPIService<AdministrativeDivision> AdministrativeDivisionService
@inject IGenericAPIService<CountryStructure> CountryStructureService
@inject IAdministrativeDivisionCustomService AdministrativeDivisionCustomService
@inject IUserCustomService UserCustomService
@inject NavigationManager NavigationManager
<div class="card show" dir="rtl">
    <div class="card-header">
        <div class="row d-flex justify-content-between">
            <div class="col-10">

                <h3>@title</h3>
            </div>


            <div class="col-2 text-center">
                <label for="profileUpload" style="cursor:pointer;">
                    <img src=' @(string.IsNullOrEmpty(user.ProfilePictureUrl) ? "_content/HajjManagement.Shared/images/user/profile/default.png" : user.ProfilePictureUrl)'
                         alt="Profile image"
                         width="50"
                         class="rounded-circle border" />
                </label>
                <div>
                    <a href="javascript:void(0)" @onclick="TriggerFileUpload">Change</a>
                </div>
                <input type="file" id="profileUpload" @ref="fileInput" style="display:none"
                       @onchange="OnProfileSelected" accept="image/*" />
            </div>


        </div>
    </div>
    <div>
        <EditForm Model="user" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator></DataAnnotationsValidator>

                                 @* ValueExpression="@(() =>user.AdministrativeDivisionId)" *@
                                 
            <CountryStructurePage 
                                 Id="@((int)(Id??0))"
                                 SelectedCountryId="user.CountryId"
                                 isDisabled="@((Id.HasValue && Id>0 && user.CountryId>0))"
                                 IsEditMode="@((Id??0) > 0)"
                                 @bind-Value="user.AdministrativeDivisionId"
                                 OnCountryChanged="OnCountryChange"
                                 OnMainDivisionChanged="()=>{}"
                                 OnChildDivisionChanged="()=>{}"/>

                                 <!--
            <div class="row mt-3 mx-2">

                <div class="col">
                    <div class="mb-3">
                        <label for="CountryId" class="form-label">البلد</label>
                        @if (countries!=null && countries.FirstOrDefault(c=>c.CountryId==user.CountryId)!=null)
                        {
                            <input type="text" class="form-control" value="@(countries.FirstOrDefault(c => c.CountryId == user.CountryId)?.Name)" disabled />
                        }
                        else
                        {
                            @if (countries != null && countries.Any())
                            {

                                <select id="country-select" class="form-control" @onchange="OnCountryChange">
                                    <option value="">Select a country...</option>
                                    @foreach (var country in countries)
                                    {
                                        <option value="@country.CountryId">@country.Name</option>
                                    }
                                </select>


                            }
                        }

                    </div>
                </div>

                <div class="col">
                    <div class="mb-3">
                        @if (mainAdministrativeDivisions != null && mainAdministrativeDivisions.Any())
                        {
                            <label for="CountryId" class="form-label">@(countryStructures.First(cs => cs.CountryStructureId == mainAdministrativeDivisions.First().CountryStructureId).Name)</label>
                            <select id="country-select" class="form-control" @onchange="OnMainAdmDivChange">
                                <option value="">Select a @(countryStructures.First(cs => cs.CountryStructureId == mainAdministrativeDivisions.First().CountryStructureId).Name) ...</option>
                                @foreach (var mad in mainAdministrativeDivisions)
                                {
                                    <option value="@mad.AdministrativeDivisionId">@mad.Name</option>
                                }
                            </select>
                        }
                    </div>
                </div>

                <div class="col">
                    <div class="mb-3">
                        @if (childrenAdministrativeDivisions != null && childrenAdministrativeDivisions.Any())
                        {
                            @* <label for="CountryId" class="form-label">@(countryStructures.First(cs=>cs.CountryStructureId==chlildrenAdmDiv.First().CountryStructureId).Name)</label> *@
                            <label for="CountryId" class="form-label">الوحدات الادارية</label>
                            <InputSelect id="country-select" class="form-control" @bind-value="@user.AdministrativeDivisionId">
                                <option value="">اختر الوحدة الإدارية )*(</option>
                                @foreach (var mad in childrenAdministrativeDivisions)
                                {
                                    <option value="@mad.AdministrativeDivisionId">
                                        <b>@countryStructures.First(cs => cs.CountryStructureId == mad.CountryStructureId).Name: </b> @mad.Name
                                    </option>
                                }
                            </InputSelect>
                            <ValidationMessage For="@(() => user.AdministrativeDivisionId)" />

                        }
                    </div>
                </div>

            </div>
            -->
            <div class="row mt-3 mx-2">
                <div class="col">
                    <div class="mb-3">
                        <label for="Name" class="form-label">الاسم الأول</label>
                        <InputText id="Name" class="form-control" @bind-Value="user.FirstName" />
                    </div>
                </div>

                <div class="col">
                    <div class="mb-3">
                        <label for="Name" class="form-label">الاسم الإخير</label>
                        <InputText id="Name" class="form-control" @bind-Value="user.LastName" />
                    </div>
                </div>

                <div class="col">
                    <div class="mb-3">
                        <label for="Name" class="form-label">رقم الهاتف</label>
                        <InputText id="Name" class="form-control" @bind-Value="user.PhoneNumber" />
                    </div>
                </div>

                <div class="col">
                    <div class="mb-3">
                        <label for="Name" class="form-label">الإيميل</label>
                        <InputText id="Name" disabled="@(Id>0)" class="form-control" @bind-Value="user.Email" />
                    </div>
                </div>
            </div>

            <div class="row  mt-3 mx-2">
                <div class="col">
                    <div class="mb-3">
                        <label for="Name" class="form-label">رقم الجواز</label>
                        <InputText id="Name" class="form-control" @bind-Value="user.Passport" />
                    </div>
                </div>

                <div class="col">
                    <div class="mb-3">
                        <label for="Name" class="form-label">مكان الإصدار</label>
                        <InputText id="Name" class="form-control" @bind-Value="user.IssuePlace" />
                    </div>
                </div>

                <div class="col">
                    <div class="mb-3">
                        <label for="Name" class="form-label">تاريخ الإصدار</label>
                        <InputDate id="Name" class="form-control" @bind-Value="user.IssueDate" />
                    </div>
                </div>


                <div class="col">
                    <div class="mb-3">
                        <label for="Name" class="form-label">تاريخ الانتهاء</label>
                        <InputDate id="Name" class="form-control" @bind-Value="user.ExpiryDate" />
                    </div>
                </div>
            </div>

            <div class="row mt-3 mx-2">
                <div class="mb-3">
                    <label for="Name" class="form-label">العنوان</label>
                    <InputTextArea id="Name" class="form-control" @bind-Value="user.Address" />
                </div>
            </div>

            <div class="mt-3 mx-2">
                <ValidationSummary></ValidationSummary>
            </div>
            <div class="mt-3 mx-2 mb-2">
                <button type="submit" class="btn btn-primary"><i class="bi bi-floppy2-fill m-1"></i> @(Id.HasValue && Id.Value > 0 ? "تعديل" : "حفظ")</button>
                <button type="button" class="btn btn-dark" @onclick="onCancel"><i class="bi bi-stop-circle-fill"></i> إلغاء</button>
            </div>


        </EditForm>
    </div>

</div>

@code {
    [Parameter]
    public int? Id { get; set; }
    private string title = "تسجيل مستخدم جديد";
    private User? userDB = new();
    private UserDto? user = new();
    // private IEnumerable<Country> countries;
    // private Country? currentCountry = new();
    // private IEnumerable<CountryStructure> allCountryStructures;
    // private IEnumerable<CountryStructure> countryStructures;
    // private IEnumerable<CountryStructure> childCountryStructures;
    // private CountryStructure? currentCountryStructure=new();
    // private IEnumerable<AdministrativeDivision> administrativeDivisions;
    // private IEnumerable<AdministrativeDivision> mainAdministrativeDivisions;
    // private IEnumerable<AdministrativeDivision> childrenAdministrativeDivisions;
    // private AdministrativeDivision? currentMainAd = new();

    private ElementReference? fileInput;
    [Inject] IJSRuntime JS { get; set; } = default!;
    private async Task TriggerFileUpload()
    {
        await JS.InvokeVoidAsync("triggerClick", fileInput);
    }
    protected override async Task OnInitializedAsync()
    {
        // countries = await CountryService.GetAllAsync();
        user.CountryId = GlobalData.CurrentCountryId;
        // allCountryStructures = await CountryStructureService.GetAllAsync();
        // countryStructures = allCountryStructures.Where(cs => cs.CountryId == GlobalData.CurrentCountryId);
        // administrativeDivisions = await AdministrativeDivisionService.GetAllAsync();
        if (Id > 0)
        {
            title = "تعديل بيانات مستخدم";
            userDB = await UserService.GetByIdAsync((int)Id);
            user = UserCustomService.GetUserDto(userDB);
            if (user.CountryId == 0)
            {
                user.CountryId = GlobalData.CurrentCountryId;
            }
        }
    }
    private void HandleValidSubmit()
    {
        // if()
        var uss = user;
        var ss = "";
    }

    private void onCancel()
    {
        NavigationManager.NavigateTo("/User/List");
    }
    
    private async Task OnCountryChange(int e)
    {
            user.CountryId = e;
        
    }
    private async Task OnMainAdmDivChange(ChangeEventArgs e)
    {
        
    }
    private async Task OnProfileSelected(ChangeEventArgs e)
    {
        var file = (e.Value as Microsoft.AspNetCore.Components.Forms.IBrowserFile);
        if (file != null)
        {
            // Example: read image as data URL (for preview)
            using var stream = file.OpenReadStream(maxAllowedSize: 5 * 1024 * 1024);
            var buffer = new byte[file.Size];
            await stream.ReadAsync(buffer);
            var base64 = Convert.ToBase64String(buffer);
            user.ProfilePictureUrl = $"data:{file.ContentType};base64,{base64}";

            // TODO: Optionally upload to server
        }
    }
}
